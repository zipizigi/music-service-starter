name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: build
      env:
        RELEASE: 1.0.${{ github.run_number }}.${{ steps.slug.outputs.sha8 }}
      run: |
        chmod +x gradlew
        ./gradlew assembleRelease
    - uses: r0adkll/sign-android-release@v1
      name: Sign app APK
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.KEYSTORE }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.KEYSTORE_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "30.0.3"


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 1.0.${{ github.run_number }}.${{ steps.slug.outputs.sha8 }}
        release_name: Release 1.0.${{ github.run_number }}.${{ steps.slug.outputs.sha8 }}
        body: ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ${{steps.sign_app.outputs.signedReleaseFile}}
        asset_name: music-service-starter.apk
        asset_content_type: application/vnd.android.package-archive
    # Example use of `signedReleaseFile` output -- not needed
    - uses: actions/upload-artifact@v2
      with:
        name: Signed app bundle
        path: ${{steps.sign_app.outputs.signedReleaseFile}}
